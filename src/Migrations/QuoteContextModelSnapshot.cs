// <auto-generated />
using System;
using DailyQuotes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DailyQuotes.Migrations
{
    [DbContext(typeof(QuoteContext))]
    partial class QuoteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5");

            modelBuilder.Entity("DailyQuotes.Data.Models.Quote", b =>
                {
                    b.Property<int>("QuoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("count")
                        .HasColumnType("INTEGER");

                    b.Property<int>("lastItemIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("totalCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("QuoteId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("DailyQuotes.Data.Models.Result", b =>
                {
                    b.Property<string>("_id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("QuoteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("author")
                        .HasColumnType("TEXT");

                    b.Property<string>("content")
                        .HasColumnType("TEXT");

                    b.Property<int>("length")
                        .HasColumnType("INTEGER");

                    b.HasKey("_id");

                    b.HasIndex("QuoteId");

                    b.ToTable("Result");
                });

            modelBuilder.Entity("DailyQuotes.Data.Models.Result", b =>
                {
                    b.HasOne("DailyQuotes.Data.Models.Quote", null)
                        .WithMany("results")
                        .HasForeignKey("QuoteId");
                });
#pragma warning restore 612, 618
        }
    }
}
